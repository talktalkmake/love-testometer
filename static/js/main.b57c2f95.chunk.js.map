{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["options","method","headers","X-RapidAPI-Host","X-RapidAPI-Key","App","_useState","useState","first","getRandomName","exampleNames","second","_useState2","Object","slicedToArray","names","setNames","_useState3","_useState4","errorFlag","setErrorFlag","_useState5","_useState6","isMatch","setIsMatch","handleNameChange","newName","idx","updatedNames","objectSpread","handleSubmit","_x","_handleSubmit","apply","this","arguments","asyncToGenerator","regenerator_default","a","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","fetch","sent","t0","json","t1","t2","console","error","stop","react_default","createElement","className","data-result","percentage","calculateRankFromPercentage","parseInt","concat","onSubmit","type","placeholder","onChange","target","value","ranks","map","rank","key","getClassName","onClick","hit","toLowerCase","replace","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b57c2f95.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './sass/app.css';\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'X-RapidAPI-Host': 'love-calculator.p.rapidapi.com',\n\t\t'X-RapidAPI-Key': '06678c9f50msh8e8dc3e7442f9f3p14404djsne386b9f689a7'\n\t}\n};\n\nfunction App() {\n  const [names, setNames] = useState({first: getRandomName(exampleNames), second: getRandomName(exampleNames)})\n  const [errorFlag, setErrorFlag] = useState(false)\n  const [isMatch, setIsMatch] = useState({})\n  function handleNameChange(newName, idx){\n    const updatedNames = ( idx === 'first' )\n      ? { ...names, first: newName }\n      : { ...names, second: newName }\n    setNames(updatedNames)\n  }\n  async function handleSubmit(e){\n    e.preventDefault();\n    try{\n      const res = await fetch(\"https://love-calculator.p.rapidapi.com/getPercentage?fname=\" + names.first + \"&sname=\" + names.second + \"?X-RapidAPI-Key=\", options);\n      setIsMatch(await res.json())\n    } catch(error) {\n      setErrorFlag(true);\n      console.error(error);\n    }\n  }\n\n  function resetForm(){\n    setIsMatch({})\n    setNames({first: getRandomName(exampleNames), second: getRandomName(exampleNames)})\n  }\n\n  function getFormForNames(){\n    return (\n      <form onSubmit={handleSubmit} className='hold-form-fields'>\n        <input type='text' placeholder={names.first} onChange={e => handleNameChange(e.target.value, 'first')} />\n        <input type='text' placeholder={names.second} onChange={e => handleNameChange(e.target.value, 'second')} />\n        <button>Go!</button>\n      </form>\n    )\n  }\n\n  return (\n    <div className=\"app\" data-result={isMatch.percentage ? calculateRankFromPercentage(parseInt(isMatch.percentage)) : \"no-result\"}>\n      <header className='prow center'>\n        <div className='intro'>\n          <span className='test h1'>Test</span>\n          <span className='your right h1'>Your</span>\n          <span className='heart h1'>‚ù§</span>\n          <span className='love left h1'>Love</span>\n        </div>\n        <section className='form-or-result'>\n        {isMatch.percentage\n          ? <p className='result'>{`${names.first} & ${names.second} are:`}</p>\n          : getFormForNames()\n        }\n        {errorFlag && <p>Sorry! There was an error in the Testometer</p>}\n        </section>\n      </header>\n      <ol className='ranks'>\n        {ranks.map(rank => {\n          return <li key={rank} className={getClassName(rank, isMatch.percentage)}>{rank}</li>}\n        )}\n      </ol>\n      <footer className='stern center'>\n        {isMatch.percentage && <button onClick={() => resetForm()}>Try again</button>}\n        <h1>Dr. Love's<br /> Love<br /> Testometer</h1>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction getClassName(rank, hit){\n  return 'rank ' + rank.toLowerCase().replace(/\\s/g, '-')\n}\n\nfunction calculateRankFromPercentage(percentage){\n  if (percentage > 90)\n    return 'red-hot'\n  else if (percentage > 80)\n    return 'casanova'\n  else if (percentage > 70)\n    return 'passionate'\n  else if (percentage > 60)\n    return 'wild'\n  else if (percentage > 50)\n    return 'kissable'\n  else if (percentage > 40)\n    return 'mild'\n  else \n    return 'cold-fish'\n}\n\nconst exampleNames = [\"Linda\", \"Bob\", \"Jimmy Pesto\", \"Jimmy Junior\", \"Ron\", \"Tina\", \"Louise\", \"Hugo\", \"Gretchen\", \"Gayle\", \"Mr Frond\", \"DRL\", \"Gene\", \"Bob Jr\"]\n\nfunction getRandomName(names){\n  return names[Math.floor(Math.random() * names.length)]\n}\n\nconst ranks = [\n  'Red Hot',\n  'Casanova',\n  'Passionate',\n  'Wild',\n  'Kissable',\n  'Mild',\n  'Cold Fish'\n]","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}